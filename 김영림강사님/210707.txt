2021-07-07

sosi0707.sql

<select 조건절>
  - and / or 사용
  - between and 사용 가능
    ex. select * from sosi where salary >= 50 and salary <= 90 ;
        select * from sosi where salary between 50 and 90 ;
  - column 값 다르게 조건 줄 수 있음.

<update>
  - update 테이블이름 set 열이름 = 바꾸고싶은값 where 열이름 = 바꿀값 ;

<insert 해서 null 값 확인하기>
ex. SQL> insert into sosi(id, name, salary, birth, grade)
      2  values(4411, 'aaa', 55, sysdate, 'B');

    SQL> insert into sosi(id, name, birth, email, grade)
      2  values(4455, 'aaa', sysdate, 'ss@LG.com', 'B');

    SQL> insert into sosi(id, name, birth, email, grade)
      2  values(4490, 'bbb', sysdate, 'ss@LG.com', 'B');

    SQL> select * from sosi
      => 값을 주지 않은 행은 빈공간으로 표시됨
  - null 값 조회
    is null / is not null

<실습 이름검색, 메일검색>
  - data를 받을 때 대소문자 구분함
  - 문자형 데이터 검색
    - like : 열이름 like '% %'
    ex. SQL> select * from sosi where name like '%a%' ;
         ㄴ a 한 글자만 있어도 조회 가능
    - in : or 조건으로 검색함
    ex. SQL> select * from sosi where name = 'cake' or name = 'test' ;
        SQL> select * from sosi where name in ( 'test', 'cake') ;

<레코드갯수>
  SQL>select  count(id) as "cnt" from  sosi;  
  SQL>select  count(id) as 'cnt' from  sosi; -에러 ('' 데이터 값으로 인식함)
  SQL>select  count(id) as  cnt from  sosi;
  - count 할 때 null 값을 빼고 계산함
  - page 계산할 때 응용 가능

<실수표현하기>
SQL> update sosi set salary=salary*1.378  ;
SQL> commit ;
SQL> select  *  from sosi  ;

SQL> update sosi set salary=salary*1.378 where salary is null ;
SQL> commit ;
SQL> select  *  from sosi  ;

SQL> select name,salary, trunc(salary,2) from sosi;   --소숫점2자릿수
SQL> select name,salary, round(salary,2) from sosi;   --소숫점2자릿수
SQL> select name,salary, floor(salary) from sosi;     --소숫점버리기

SQL> select  trunc(avg(salary),2) from sosi;   --소숫점2자릿수
SQL> select  round(avg(salary),2) from sosi;   --소숫점2자릿수
SQL> select  floor(avg(salary)) from sosi;     --소숫점버리기

  - rounf(숫자,반올림할 자릿수) - 숫자를 반올림할 자릿수 +1 자릿수에서 반올림
    trunc(숫자,버릴 자릿수) - 숫자를 버릴 자릿수 아래로 버림

<내장함수>
  - dual 테이블
    - 오라클 자체에서 제공되는 테이블로 (1,1) 사이즈
    - 함수의 쓰임이나, 데이터 추가, 삭제 등 임시로 테스트 해볼때 많이 활용
  - as 사용해서 열이름에 별명(?)을 지어줄 수 있음 (생략가능)
  - length() : 길이반환 / lengthb() : 길이바이트반환 
    - 시스템설정마다 한글의 기본 byte 값이 다를 수 있음
  - substr() : 문자열 반환 / substrb() : 바이트 수 반환
    - substr('문자열', 시작위치, 길이)
  - lpad() / rpad() : 만들어질자릿수에 왼쪽오른쪽에 그만큼 문자를 채우는 것
    - lpad('문자열', 만들어질자릿수, '채울문자')


<java와 오라클데이터베이스 연결>
1) 반드시 필수 라이브러리 .jar
2) 반드시 import java.sql.*;
3) java.lang패키지
     Class클래스 존재 정보를 연결하는 역할
4) Connection 연결정보, Statemenet 명령, PreparedStatement 명령
   ResultSet 조회관련데이터기억
5) 쿼리문 DML 기준 String msg = " insert/select/delete/update ..." ;
6) 
  try{ //무조건 예외처리 해줘야함
  Class.forName("oracle.jdbc.driver.OracleDriver"); //오라클드라이브로드
  String url="jdbc:oracle:thin:@127.0.0.1:1521:XE" ;  //XE -> C:\oraclexe\app\oracle\oradata\XE를 가져오는 것
  //명령어 생성할 때 반드시 CN참조                    //오라클 서버주소 및 이름
  Connection CN=DriverManager.getConnection("jdbc:oracle:thin:@127.0.0.1:1521:XE","system","1234");
  }catch(Exception ex) {}         ────────────────────────────────────
                                   = url로 바꿔서 쓸 수 있음
7) Statement ST = CN.createDtatement();


C:\oraclexe\app\oracle\product\11.2.0\server\jdbc\lib\ojdbc6.jar 복사해서 Mtest 폴더에 넣기
프로젝트폴터>오른쪽마우스>Properties>Java Build Path>Libraries>Modulepath선택>Add External..>ojdbc6.jar넣어주기















